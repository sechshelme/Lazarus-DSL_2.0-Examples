unit SDL_keycode;

interface

uses
  SDL_scancode;

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}

//{$ifndef SDL_keycode_h_}
//{$define SDL_keycode_h_}
//{$include <SDL3/SDL_stdinc.h>}
//{$include <SDL3/SDL_scancode.h>}
{*
 *  The SDL virtual key representation.
 *
 *  Values of this type are used to represent keyboard keys using the current
 *  layout of the keyboard.  These values include Unicode values representing
 *  the unmodified character that would be generated by pressing the key, or
 *  an SDLK_* constant for those keys that do not generate characters.
 *
 *  A special exception is the number keys at the top of the keyboard which
 *  map to SDLK_0...SDLK_9 on AZERTY layouts.
  }
//type
//  PSDL_Keycode = ^TSDL_Keycode;
//  TSDL_Keycode = int32;

const
  SDLK_SCANCODE_MASK = 1 shl 30;  
{ was #define dname(params) para_def_expr }
{ argument types are unknown }
{ return type might be wrong }   

function SDL_SCANCODE_TO_KEYCODE(X : longint) : longint;

{/////    SDLK_QUOTE = '\'', }
{
       Skip uppercase letters
      }
type
  PSDL_KeyCode = ^TSDL_KeyCode;
  TSDL_KeyCode =  Longint;
  Const
    SDLK_UNKNOWN = 0;
    SDLK_RETURN = '\r';
    SDLK_ESCAPE = '\x1B';
    SDLK_BACKSPACE = '\b';
    SDLK_TAB = '\t';
    SDLK_SPACE = ' ';
    SDLK_EXCLAIM = '!';
    SDLK_QUOTEDBL = '"';
    SDLK_HASH = '#';
    SDLK_PERCENT = '%';
    SDLK_DOLLAR = '$';
    SDLK_AMPERSAND = '&';
//    SDLK_QUOTE = '\'';
    SDLK_QUOTE = '\'#39;

    SDLK_LEFTPAREN = '(';
    SDLK_RIGHTPAREN = ')';
    SDLK_ASTERISK = '*';
    SDLK_PLUS = '+';
    SDLK_COMMA = ',';
    SDLK_MINUS = '-';
    SDLK_PERIOD = '.';
    SDLK_SLASH = '/';
    SDLK_0 = '0';
    SDLK_1 = '1';
    SDLK_2 = '2';
    SDLK_3 = '3';
    SDLK_4 = '4';
    SDLK_5 = '5';
    SDLK_6 = '6';
    SDLK_7 = '7';
    SDLK_8 = '8';
    SDLK_9 = '9';
    SDLK_COLON = ':';
    SDLK_SEMICOLON = ';';
    SDLK_LESS = '<';
    SDLK_EQUALS = '=';
    SDLK_GREATER = '>';
    SDLK_QUESTION = '?';
    SDLK_AT = '@';
    SDLK_LEFTBRACKET = '[';
    SDLK_BACKSLASH = '\\';
    SDLK_RIGHTBRACKET = ']';
    SDLK_CARET = '^';
    SDLK_UNDERSCORE = '_';
    SDLK_BACKQUOTE = '`';
    SDLK_a = 'a';
    SDLK_b = 'b';
    SDLK_c = 'c';
    SDLK_d = 'd';
    SDLK_e = 'e';
    SDLK_f = 'f';
    SDLK_g = 'g';
    SDLK_h = 'h';
    SDLK_i = 'i';
    SDLK_j = 'j';
    SDLK_k = 'k';
    SDLK_l = 'l';
    SDLK_m = 'm';
    SDLK_n = 'n';
    SDLK_o = 'o';
    SDLK_p = 'p';
    SDLK_q = 'q';
    SDLK_r = 'r';
    SDLK_s = 's';
    SDLK_t = 't';
    SDLK_u = 'u';
    SDLK_v = 'v';
    SDLK_w = 'w';
    SDLK_x = 'x';
    SDLK_y = 'y';
    SDLK_z = 'z';
    SDLK_CAPSLOCK = SDL_SCANCODE_CAPSLOCK or SDLK_SCANCODE_MASK;
    SDLK_F1 = SDL_SCANCODE_F1 or SDLK_SCANCODE_MASK;
    SDLK_F2 = SDL_SCANCODE_F2 or SDLK_SCANCODE_MASK;
    SDLK_F3 = SDL_SCANCODE_F3 or SDLK_SCANCODE_MASK;
    SDLK_F4 = SDL_SCANCODE_F4 or SDLK_SCANCODE_MASK;
    SDLK_F5 = SDL_SCANCODE_F5 or SDLK_SCANCODE_MASK;
    SDLK_F6 = SDL_SCANCODE_F6 or SDLK_SCANCODE_MASK;
    SDLK_F7 = SDL_SCANCODE_F7 or SDLK_SCANCODE_MASK;
    SDLK_F8 = SDL_SCANCODE_F8 or SDLK_SCANCODE_MASK;
    SDLK_F9 = SDL_SCANCODE_F9 or SDLK_SCANCODE_MASK;
    SDLK_F10 = SDL_SCANCODE_F10 or SDLK_SCANCODE_MASK;
    SDLK_F11 = SDL_SCANCODE_F11 or SDLK_SCANCODE_MASK;
    SDLK_F12 = SDL_SCANCODE_F12 or SDLK_SCANCODE_MASK;
    SDLK_PRINTSCREEN = SDL_SCANCODE_PRINTSCREEN or SDLK_SCANCODE_MASK;
    SDLK_SCROLLLOCK = SDL_SCANCODE_SCROLLLOCK or SDLK_SCANCODE_MASK;
    SDLK_PAUSE = SDL_SCANCODE_PAUSE or SDLK_SCANCODE_MASK;
    SDLK_INSERT = SDL_SCANCODE_INSERT or SDLK_SCANCODE_MASK;
    SDLK_HOME = SDL_SCANCODE_HOME or SDLK_SCANCODE_MASK;
    SDLK_PAGEUP = SDL_SCANCODE_PAGEUP or SDLK_SCANCODE_MASK;
    SDLK_DELETE = '\x7F';
    SDLK_END = SDL_SCANCODE_END or SDLK_SCANCODE_MASK;
    SDLK_PAGEDOWN = SDL_SCANCODE_PAGEDOWN or SDLK_SCANCODE_MASK;
    SDLK_RIGHT = SDL_SCANCODE_RIGHT or SDLK_SCANCODE_MASK;
    SDLK_LEFT = SDL_SCANCODE_LEFT or SDLK_SCANCODE_MASK;
    SDLK_DOWN = SDL_SCANCODE_DOWN or SDLK_SCANCODE_MASK;
    SDLK_UP = SDL_SCANCODE_UP or SDLK_SCANCODE_MASK;
    SDLK_NUMLOCKCLEAR = SDL_SCANCODE_NUMLOCKCLEAR or SDLK_SCANCODE_MASK;
    SDLK_KP_DIVIDE = SDL_SCANCODE_KP_DIVIDE or SDLK_SCANCODE_MASK;
    SDLK_KP_MULTIPLY = SDL_SCANCODE_KP_MULTIPLY or SDLK_SCANCODE_MASK;
    SDLK_KP_MINUS = SDL_SCANCODE_KP_MINUS or SDLK_SCANCODE_MASK;
    SDLK_KP_PLUS = SDL_SCANCODE_KP_PLUS or SDLK_SCANCODE_MASK;
    SDLK_KP_ENTER = SDL_SCANCODE_KP_ENTER or SDLK_SCANCODE_MASK;
    SDLK_KP_1 = SDL_SCANCODE_KP_1 or SDLK_SCANCODE_MASK;
    SDLK_KP_2 = SDL_SCANCODE_KP_2 or SDLK_SCANCODE_MASK;
    SDLK_KP_3 = SDL_SCANCODE_KP_3 or SDLK_SCANCODE_MASK;
    SDLK_KP_4 = SDL_SCANCODE_KP_4 or SDLK_SCANCODE_MASK;
    SDLK_KP_5 = SDL_SCANCODE_KP_5 or SDLK_SCANCODE_MASK;
    SDLK_KP_6 = SDL_SCANCODE_KP_6 or SDLK_SCANCODE_MASK;
    SDLK_KP_7 = SDL_SCANCODE_KP_7 or SDLK_SCANCODE_MASK;
    SDLK_KP_8 = SDL_SCANCODE_KP_8 or SDLK_SCANCODE_MASK;
    SDLK_KP_9 = SDL_SCANCODE_KP_9 or SDLK_SCANCODE_MASK;
    SDLK_KP_0 = SDL_SCANCODE_KP_0 or SDLK_SCANCODE_MASK;
    SDLK_KP_PERIOD = SDL_SCANCODE_KP_PERIOD or SDLK_SCANCODE_MASK;
    SDLK_APPLICATION = SDL_SCANCODE_APPLICATION or SDLK_SCANCODE_MASK;
    SDLK_POWER = SDL_SCANCODE_POWER or SDLK_SCANCODE_MASK;
    SDLK_KP_EQUALS = SDL_SCANCODE_KP_EQUALS or SDLK_SCANCODE_MASK;
    SDLK_F13 = SDL_SCANCODE_F13 or SDLK_SCANCODE_MASK;
    SDLK_F14 = SDL_SCANCODE_F14 or SDLK_SCANCODE_MASK;
    SDLK_F15 = SDL_SCANCODE_F15 or SDLK_SCANCODE_MASK;
    SDLK_F16 = SDL_SCANCODE_F16 or SDLK_SCANCODE_MASK;
    SDLK_F17 = SDL_SCANCODE_F17 or SDLK_SCANCODE_MASK;
    SDLK_F18 = SDL_SCANCODE_F18 or SDLK_SCANCODE_MASK;
    SDLK_F19 = SDL_SCANCODE_F19 or SDLK_SCANCODE_MASK;
    SDLK_F20 = SDL_SCANCODE_F20 or SDLK_SCANCODE_MASK;
    SDLK_F21 = SDL_SCANCODE_F21 or SDLK_SCANCODE_MASK;
    SDLK_F22 = SDL_SCANCODE_F22 or SDLK_SCANCODE_MASK;
    SDLK_F23 = SDL_SCANCODE_F23 or SDLK_SCANCODE_MASK;
    SDLK_F24 = SDL_SCANCODE_F24 or SDLK_SCANCODE_MASK;
    SDLK_EXECUTE = SDL_SCANCODE_EXECUTE or SDLK_SCANCODE_MASK;
    SDLK_HELP = SDL_SCANCODE_HELP or SDLK_SCANCODE_MASK;
    SDLK_MENU = SDL_SCANCODE_MENU or SDLK_SCANCODE_MASK;
    SDLK_SELECT = SDL_SCANCODE_SELECT or SDLK_SCANCODE_MASK;
    SDLK_STOP = SDL_SCANCODE_STOP or SDLK_SCANCODE_MASK;
    SDLK_AGAIN = SDL_SCANCODE_AGAIN or SDLK_SCANCODE_MASK;
    SDLK_UNDO = SDL_SCANCODE_UNDO or SDLK_SCANCODE_MASK;
    SDLK_CUT = SDL_SCANCODE_CUT or SDLK_SCANCODE_MASK;
    SDLK_COPY = SDL_SCANCODE_COPY or SDLK_SCANCODE_MASK;
    SDLK_PASTE = SDL_SCANCODE_PASTE or SDLK_SCANCODE_MASK;
    SDLK_FIND = SDL_SCANCODE_FIND or SDLK_SCANCODE_MASK;
    SDLK_MUTE = SDL_SCANCODE_MUTE or SDLK_SCANCODE_MASK;
    SDLK_VOLUMEUP = SDL_SCANCODE_VOLUMEUP or SDLK_SCANCODE_MASK;
    SDLK_VOLUMEDOWN = SDL_SCANCODE_VOLUMEDOWN or SDLK_SCANCODE_MASK;
    SDLK_KP_COMMA = SDL_SCANCODE_KP_COMMA or SDLK_SCANCODE_MASK;
    SDLK_KP_EQUALSAS400 = SDL_SCANCODE_KP_EQUALSAS400 or SDLK_SCANCODE_MASK;
    SDLK_ALTERASE = SDL_SCANCODE_ALTERASE or SDLK_SCANCODE_MASK;
    SDLK_SYSREQ = SDL_SCANCODE_SYSREQ or SDLK_SCANCODE_MASK;
    SDLK_CANCEL = SDL_SCANCODE_CANCEL or SDLK_SCANCODE_MASK;
    SDLK_CLEAR = SDL_SCANCODE_CLEAR or SDLK_SCANCODE_MASK;
    SDLK_PRIOR = SDL_SCANCODE_PRIOR or SDLK_SCANCODE_MASK;
    SDLK_RETURN2 = SDL_SCANCODE_RETURN2 or SDLK_SCANCODE_MASK;
    SDLK_SEPARATOR = SDL_SCANCODE_SEPARATOR or SDLK_SCANCODE_MASK;
    SDLK_OUT = SDL_SCANCODE_OUT or SDLK_SCANCODE_MASK;
    SDLK_OPER = SDL_SCANCODE_OPER or SDLK_SCANCODE_MASK;
    SDLK_CLEARAGAIN = SDL_SCANCODE_CLEARAGAIN or SDLK_SCANCODE_MASK;
    SDLK_CRSEL = SDL_SCANCODE_CRSEL or SDLK_SCANCODE_MASK;
    SDLK_EXSEL = SDL_SCANCODE_EXSEL or SDLK_SCANCODE_MASK;
    SDLK_KP_00 = SDL_SCANCODE_KP_00 or SDLK_SCANCODE_MASK;
    SDLK_KP_000 = SDL_SCANCODE_KP_000 or SDLK_SCANCODE_MASK;
    SDLK_THOUSANDSSEPARATOR = SDL_SCANCODE_THOUSANDSSEPARATOR or SDLK_SCANCODE_MASK;
    SDLK_DECIMALSEPARATOR = SDL_SCANCODE_DECIMALSEPARATOR or SDLK_SCANCODE_MASK;
    SDLK_CURRENCYUNIT = SDL_SCANCODE_CURRENCYUNIT or SDLK_SCANCODE_MASK;
    SDLK_CURRENCYSUBUNIT = SDL_SCANCODE_CURRENCYSUBUNIT or SDLK_SCANCODE_MASK;
    SDLK_KP_LEFTPAREN = SDL_SCANCODE_KP_LEFTPAREN or SDLK_SCANCODE_MASK;
    SDLK_KP_RIGHTPAREN = SDL_SCANCODE_KP_RIGHTPAREN or SDLK_SCANCODE_MASK;
    SDLK_KP_LEFTBRACE = SDL_SCANCODE_KP_LEFTBRACE or SDLK_SCANCODE_MASK;
    SDLK_KP_RIGHTBRACE = SDL_SCANCODE_KP_RIGHTBRACE or SDLK_SCANCODE_MASK;
    SDLK_KP_TAB = SDL_SCANCODE_KP_TAB or SDLK_SCANCODE_MASK;
    SDLK_KP_BACKSPACE = SDL_SCANCODE_KP_BACKSPACE or SDLK_SCANCODE_MASK;
    SDLK_KP_A = SDL_SCANCODE_KP_A or SDLK_SCANCODE_MASK;
    SDLK_KP_B = SDL_SCANCODE_KP_B or SDLK_SCANCODE_MASK;
    SDLK_KP_C = SDL_SCANCODE_KP_C or SDLK_SCANCODE_MASK;
    SDLK_KP_D = SDL_SCANCODE_KP_D or SDLK_SCANCODE_MASK;
    SDLK_KP_E = SDL_SCANCODE_KP_E or SDLK_SCANCODE_MASK;
    SDLK_KP_F = SDL_SCANCODE_KP_F or SDLK_SCANCODE_MASK;
    SDLK_KP_XOR = SDL_SCANCODE_KP_XOR or SDLK_SCANCODE_MASK;
    SDLK_KP_POWER = SDL_SCANCODE_KP_POWER or SDLK_SCANCODE_MASK;
    SDLK_KP_PERCENT = SDL_SCANCODE_KP_PERCENT or SDLK_SCANCODE_MASK;
    SDLK_KP_LESS = SDL_SCANCODE_KP_LESS or SDLK_SCANCODE_MASK;
    SDLK_KP_GREATER = SDL_SCANCODE_KP_GREATER or SDLK_SCANCODE_MASK;
    SDLK_KP_AMPERSAND = SDL_SCANCODE_KP_AMPERSAND or SDLK_SCANCODE_MASK;
    SDLK_KP_DBLAMPERSAND = SDL_SCANCODE_KP_DBLAMPERSAND or SDLK_SCANCODE_MASK;
    SDLK_KP_VERTICALBAR = SDL_SCANCODE_KP_VERTICALBAR or SDLK_SCANCODE_MASK;
    SDLK_KP_DBLVERTICALBAR = SDL_SCANCODE_KP_DBLVERTICALBAR or SDLK_SCANCODE_MASK;
    SDLK_KP_COLON = SDL_SCANCODE_KP_COLON or SDLK_SCANCODE_MASK;
    SDLK_KP_HASH = SDL_SCANCODE_KP_HASH or SDLK_SCANCODE_MASK;
    SDLK_KP_SPACE = SDL_SCANCODE_KP_SPACE or SDLK_SCANCODE_MASK;
    SDLK_KP_AT = SDL_SCANCODE_KP_AT or SDLK_SCANCODE_MASK;
    SDLK_KP_EXCLAM = SDL_SCANCODE_KP_EXCLAM or SDLK_SCANCODE_MASK;
    SDLK_KP_MEMSTORE = SDL_SCANCODE_KP_MEMSTORE or SDLK_SCANCODE_MASK;
    SDLK_KP_MEMRECALL = SDL_SCANCODE_KP_MEMRECALL or SDLK_SCANCODE_MASK;
    SDLK_KP_MEMCLEAR = SDL_SCANCODE_KP_MEMCLEAR or SDLK_SCANCODE_MASK;
    SDLK_KP_MEMADD = SDL_SCANCODE_KP_MEMADD or SDLK_SCANCODE_MASK;
    SDLK_KP_MEMSUBTRACT = SDL_SCANCODE_KP_MEMSUBTRACT or SDLK_SCANCODE_MASK;
    SDLK_KP_MEMMULTIPLY = SDL_SCANCODE_KP_MEMMULTIPLY or SDLK_SCANCODE_MASK;
    SDLK_KP_MEMDIVIDE = SDL_SCANCODE_KP_MEMDIVIDE or SDLK_SCANCODE_MASK;
    SDLK_KP_PLUSMINUS = SDL_SCANCODE_KP_PLUSMINUS or SDLK_SCANCODE_MASK;
    SDLK_KP_CLEAR = SDL_SCANCODE_KP_CLEAR or SDLK_SCANCODE_MASK;
    SDLK_KP_CLEARENTRY = SDL_SCANCODE_KP_CLEARENTRY or SDLK_SCANCODE_MASK;
    SDLK_KP_BINARY = SDL_SCANCODE_KP_BINARY or SDLK_SCANCODE_MASK;
    SDLK_KP_OCTAL = SDL_SCANCODE_KP_OCTAL or SDLK_SCANCODE_MASK;
    SDLK_KP_DECIMAL = SDL_SCANCODE_KP_DECIMAL or SDLK_SCANCODE_MASK;
    SDLK_KP_HEXADECIMAL = SDL_SCANCODE_KP_HEXADECIMAL or SDLK_SCANCODE_MASK;
    SDLK_LCTRL = SDL_SCANCODE_LCTRL or SDLK_SCANCODE_MASK;
    SDLK_LSHIFT = SDL_SCANCODE_LSHIFT or SDLK_SCANCODE_MASK;
    SDLK_LALT = SDL_SCANCODE_LALT or SDLK_SCANCODE_MASK;
    SDLK_LGUI = SDL_SCANCODE_LGUI or SDLK_SCANCODE_MASK;
    SDLK_RCTRL = SDL_SCANCODE_RCTRL or SDLK_SCANCODE_MASK;
    SDLK_RSHIFT = SDL_SCANCODE_RSHIFT or SDLK_SCANCODE_MASK;
    SDLK_RALT = SDL_SCANCODE_RALT or SDLK_SCANCODE_MASK;
    SDLK_RGUI = SDL_SCANCODE_RGUI or SDLK_SCANCODE_MASK;
    SDLK_MODE = SDL_SCANCODE_MODE or SDLK_SCANCODE_MASK;
    SDLK_AUDIONEXT = SDL_SCANCODE_AUDIONEXT or SDLK_SCANCODE_MASK;
    SDLK_AUDIOPREV = SDL_SCANCODE_AUDIOPREV or SDLK_SCANCODE_MASK;
    SDLK_AUDIOSTOP = SDL_SCANCODE_AUDIOSTOP or SDLK_SCANCODE_MASK;
    SDLK_AUDIOPLAY = SDL_SCANCODE_AUDIOPLAY or SDLK_SCANCODE_MASK;
    SDLK_AUDIOMUTE = SDL_SCANCODE_AUDIOMUTE or SDLK_SCANCODE_MASK;
    SDLK_MEDIASELECT = SDL_SCANCODE_MEDIASELECT or SDLK_SCANCODE_MASK;
    SDLK_WWW = SDL_SCANCODE_WWW or SDLK_SCANCODE_MASK;
    SDLK_MAIL = SDL_SCANCODE_MAIL or SDLK_SCANCODE_MASK;
    SDLK_CALCULATOR = SDL_SCANCODE_CALCULATOR or SDLK_SCANCODE_MASK;
    SDLK_COMPUTER = SDL_SCANCODE_COMPUTER or SDLK_SCANCODE_MASK;
    SDLK_AC_SEARCH = SDL_SCANCODE_AC_SEARCH or SDLK_SCANCODE_MASK;
    SDLK_AC_HOME = SDL_SCANCODE_AC_HOME or SDLK_SCANCODE_MASK;
    SDLK_AC_BACK = SDL_SCANCODE_AC_BACK or SDLK_SCANCODE_MASK;
    SDLK_AC_FORWARD = SDL_SCANCODE_AC_FORWARD or SDLK_SCANCODE_MASK;
    SDLK_AC_STOP = SDL_SCANCODE_AC_STOP or SDLK_SCANCODE_MASK;
    SDLK_AC_REFRESH = SDL_SCANCODE_AC_REFRESH or SDLK_SCANCODE_MASK;
    SDLK_AC_BOOKMARKS = SDL_SCANCODE_AC_BOOKMARKS or SDLK_SCANCODE_MASK;
    SDLK_BRIGHTNESSDOWN = SDL_SCANCODE_BRIGHTNESSDOWN or SDLK_SCANCODE_MASK;
    SDLK_BRIGHTNESSUP = SDL_SCANCODE_BRIGHTNESSUP or SDLK_SCANCODE_MASK;
    SDLK_DISPLAYSWITCH = SDL_SCANCODE_DISPLAYSWITCH or SDLK_SCANCODE_MASK;
    SDLK_KBDILLUMTOGGLE = SDL_SCANCODE_KBDILLUMTOGGLE or SDLK_SCANCODE_MASK;
    SDLK_KBDILLUMDOWN = SDL_SCANCODE_KBDILLUMDOWN or SDLK_SCANCODE_MASK;
    SDLK_KBDILLUMUP = SDL_SCANCODE_KBDILLUMUP or SDLK_SCANCODE_MASK;
    SDLK_EJECT = SDL_SCANCODE_EJECT or SDLK_SCANCODE_MASK;
    SDLK_SLEEP = SDL_SCANCODE_SLEEP or SDLK_SCANCODE_MASK;
    SDLK_APP1 = SDL_SCANCODE_APP1 or SDLK_SCANCODE_MASK;
    SDLK_APP2 = SDL_SCANCODE_APP2 or SDLK_SCANCODE_MASK;
    SDLK_AUDIOREWIND = SDL_SCANCODE_AUDIOREWIND or SDLK_SCANCODE_MASK;
    SDLK_AUDIOFASTFORWARD = SDL_SCANCODE_AUDIOFASTFORWARD or SDLK_SCANCODE_MASK;
    SDLK_SOFTLEFT = SDL_SCANCODE_SOFTLEFT or SDLK_SCANCODE_MASK;
    SDLK_SOFTRIGHT = SDL_SCANCODE_SOFTRIGHT or SDLK_SCANCODE_MASK;
    SDLK_CALL = SDL_SCANCODE_CALL or SDLK_SCANCODE_MASK;
    SDLK_ENDCALL = SDL_SCANCODE_ENDCALL or SDLK_SCANCODE_MASK;

{*
 * Enumeration of valid key mods (possibly OR'd together).
  }
{ This is for source-level compatibility with SDL 2.0.0.  }
type
  PSDL_Keymod = ^TSDL_Keymod;
  TSDL_Keymod =  Longint;
  Const
    SDL_KMOD_NONE = $0000;
    SDL_KMOD_LSHIFT = $0001;
    SDL_KMOD_RSHIFT = $0002;
    SDL_KMOD_LCTRL = $0040;
    SDL_KMOD_RCTRL = $0080;
    SDL_KMOD_LALT = $0100;
    SDL_KMOD_RALT = $0200;
    SDL_KMOD_LGUI = $0400;
    SDL_KMOD_RGUI = $0800;
    SDL_KMOD_NUM = $1000;
    SDL_KMOD_CAPS = $2000;
    SDL_KMOD_MODE = $4000;
    SDL_KMOD_SCROLL = $8000;
    SDL_KMOD_CTRL = SDL_KMOD_LCTRL or SDL_KMOD_RCTRL;
    SDL_KMOD_SHIFT = SDL_KMOD_LSHIFT or SDL_KMOD_RSHIFT;
    SDL_KMOD_ALT = SDL_KMOD_LALT or SDL_KMOD_RALT;
    SDL_KMOD_GUI = SDL_KMOD_LGUI or SDL_KMOD_RGUI;
    SDL_KMOD_RESERVED = SDL_KMOD_SCROLL;

//{$endif}
//{ SDL_keycode_h_  }

implementation

{ was #define dname(params) para_def_expr }
{ argument types are unknown }
{ return type might be wrong }   
function SDL_SCANCODE_TO_KEYCODE(X : longint) : longint;
begin
  SDL_SCANCODE_TO_KEYCODE:=X or SDLK_SCANCODE_MASK;
end;


end.
